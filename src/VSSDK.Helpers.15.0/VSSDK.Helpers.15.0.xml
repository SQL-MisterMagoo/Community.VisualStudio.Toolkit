<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VSSDK.Helpers.15.0</name>
    </assembly>
    <members>
        <member name="T:System.ExceptionExtensions">
            <summary>Extension methods for the Exception class.</summary>
        </member>
        <member name="M:System.ExceptionExtensions.LogAsync(System.Exception)">
            <summary>Log the error to the Output Window.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Imaging.Interop.ImageMonikerExtensions">
            <summary>Extension methods for the ImageMoniker class.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Imaging.Interop.ImageMonikerExtensions.ToBitmapSourceAsync(Microsoft.VisualStudio.Imaging.Interop.ImageMoniker,System.Int32)">
            <summary>Converts an ImageMoniker to a bitmap in the specified size.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Imaging.Interop.ImageMonikerExtensions.ToUiObjectAsync(Microsoft.VisualStudio.Imaging.Interop.ImageMoniker,System.Int32)">
            <summary>Converts an ImageMoniker to an IVsUIObject in the specified size.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionExtensions">
            <summary>Extension methods for the IVsSolution interface.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionExtensions.GetAllProjects(Microsoft.VisualStudio.Shell.Interop.IVsSolution)">
            <summary>Retrieves an array of all projects in the solution.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionExtensions.GetProjectsInSolution(Microsoft.VisualStudio.Shell.Interop.IVsSolution)">
            <summary>Gets all projects in the solution as IVsHierarchy items.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionExtensions.GetProjectsInSolution(Microsoft.VisualStudio.Shell.Interop.IVsSolution,Microsoft.VisualStudio.Shell.Interop.__VSENUMPROJFLAGS)">
            <summary>Gets all projects in the solution as IVsHierarchy items.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionExtensions.ToProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
            <summary>Converts an IVsHierarchy to a Project.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.Commanding">
            <summary>A collection of services related to the command system.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Commanding.GetCommandServiceAsync">
            <summary>Provides methods to manage the global designer verbs and menu commands available in design mode, and to show some types of shortcut menus.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Commanding.GetPriorityCommandTargetAsync">
            <summary>Used to register and unregister a command target as a high priority command handler.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.Events">
            <summary>A collection of events.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.VS">
            <summary>
            The entry point for a wide variety of extensibility helper classes and methods.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Helpers.VS.Commanding">
            <summary>A collection of services related to the command system.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Helpers.VS.Debugger">
            <summary>A collection of services related to the debugger.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Helpers.VS.Editor">
            <summary>A collection of services related to the editor.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Helpers.VS.Events">
            <summary>A collection of events.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Helpers.VS.Notifications">
            <summary>A collection of services related to notifying the users.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Helpers.VS.Shell">
            <summary>A collection of services related to the shell.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Helpers.VS.Solution">
            <summary>A collection of services related to solutions.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Helpers.VS.Windows">
            <summary>A collection of services related to windows.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.VS.GetDTEAsync">
            <summary>Get the EnvDTE which provide a broad API for a large part of Visual Studio.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.VS.GetServiceAsync``2">
            <summary>
            Gets a global service asynchronously.
            </summary>
            <typeparam name="TService">The type identity of the service.</typeparam>
            <typeparam name="TInterface">The interface to cast the service to.</typeparam>
            <returns>A task whose result is the service, if found; otherwise null.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.BaseOptionModel`1">
            <summary>
            A base class for specifying options
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseOptionModel`1.#ctor">
            <summary>Creates a new instance of the option model.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Helpers.BaseOptionModel`1.Instance">
            <summary>
            A singleton instance of the options. MUST be called from UI thread only.
            </summary>
            <remarks>
            Call <see cref="M:Microsoft.VisualStudio.Helpers.BaseOptionModel`1.GetLiveInstanceAsync" /> instead if on a background thread or in an async context on the main thread.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseOptionModel`1.GetLiveInstanceAsync">
            <summary>
            Get the singleton instance of the options. Thread safe.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseOptionModel`1.CreateAsync">
            <summary>
            Creates a new instance of the options class and loads the values from the store. For internal use only
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Helpers.BaseOptionModel`1.CollectionName">
            <summary>
            The name of the options collection as stored in the registry.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseOptionModel`1.Load">
            <summary>
            Hydrates the properties from the registry.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseOptionModel`1.LoadAsync">
            <summary>
            Hydrates the properties from the registry asyncronously.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseOptionModel`1.Save">
            <summary>
            Saves the properties to the registry.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseOptionModel`1.SaveAsync">
            <summary>
            Saves the properties to the registry asyncronously.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseOptionModel`1.SerializeValue(System.Object)">
            <summary>
            Serializes an object value to a string using the binary serializer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseOptionModel`1.DeserializeValue(System.String,System.Type)">
            <summary>
            Deserializes a string to an object using the binary serializer.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.BaseOptionPage`1">
            <summary>
            A base class for a DialogPage to show in Tools -> Options.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseOptionPage`1.#ctor">
            <summary>Creates a new instance of the options page.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Helpers.BaseOptionPage`1.AutomationObject">
            <summary>The model object to load and store.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseOptionPage`1.LoadSettingsFromStorage">
            <summary>Loads the settings from the internal storage.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseOptionPage`1.SaveSettingsToStorage">
            <summary>Saves settings to the internal storage.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.Debugger">
            <summary>A collection of services related to debugging.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Debugger.GetDebuggerAsync">
            <summary>Provides access to the current debugger so that the package can listen for debugger events.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Debugger.GetDebugLaunchAsync">
            <summary>Used to launch the debugger.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Debugger.GetDebuggableProtocolAsync">
            <summary>Allows clients to add to the debuggable protocol list.`</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.Editor">
            <summary>A collection of services related to the editor.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Editor.GetCurrentWpfTextViewAsync">
            <summary>Gets the WPF text view from the currently active document.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Editor.GetCurrentNativeTextViewAsync">
            <summary>Gets the native text view from the currently active document.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.Editor.ContentTypes">
            <summary>A list of content types for known languages.</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Helpers.Editor.ContentTypes.Any">
            <summary>Applies to all languages.</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Helpers.Editor.ContentTypes.Text">
            <summary>The base content type of all text documents including 'code'.</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Helpers.Editor.ContentTypes.Code">
            <summary>The base content type of all coding text documents and languages.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.Notifications">
            <summary>A collection of services used to notify the user.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Notifications.GetThreadedWaitDialogAsync">
            <summary>Used for background tasks that needs to block the UI if they take longer than the specified seconds.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Notifications.GetActivityLogAsync">
            <summary>Used to write log messaged to the ActivityLog.xml file.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Helpers.Notifications.Statusbar">
            <summary>Used to write messages to or animate the status bar.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.Shell">
            <summary>A collection of services related to the command system.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Shell.GetShellAsync">
            <summary>Provides access to the fundamental environment services, specifically those dealing with VSPackages and the registry.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Shell.GetUIShellAsync">
            <summary>This interface provides access to basic windowing functionality, including access to and creation of tool windows and document windows.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Shell.GetAppCommandLineAsync">
            <summary>This interface is used by a package to read command-line switches entered by the user.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Shell.GetImageServiceAsync">
            <summary>Registers well-known images (such as icons) for Visual Studio.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Shell.GetFontAndColorCacheManagerAsync">
            <summary>Controls the caching of font and color settings.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Shell.GetFontAndColorStorageAsync">
            <summary>Allows a VSPackage to retrieve or save font and color data to the registry.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Shell.GetToolsOptionsAsync">
            <summary>Manages a Tools Options dialog box. The environment implements this interface.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Shell.GetMRUItemsStoreAsync">
            <summary>Controls the most recently used (MRU) items collection.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Shell.OpenDocumentViaProjectAsync(System.String)">
            <summary>
            Opens the file via the project instead of as a misc file.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.Solution">
            <summary>A collection of services and helpers related to solutions.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Solution.GetSelectedItemAsync">
            <summary>
            Returns either a Project or ProjectItem. Returns null if Solution is Selected.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Solution.GetSelectedItemFilePathsAsync">
            <summary>Gets the full paths to the currently selected item(s) in the Solution Explorer.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Solution.GetActiveProjectAsync">
            <summary>Gets the active project.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.Windows">
            <summary>A collection of services related to windows.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Windows.GetCallBrowserAsync">
            <summary>Manipulates the Call Browser for debugging.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Windows.GetClassViewAsync">
            <summary>Allows navigation to an object in Class View.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Windows.GetCodeWindowAsync">
            <summary>Represents a multiple-document interface (MDI) child that contains one or more code views.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Windows.GetCommandWindowAsync">
            <summary>Enables the package to use the Command Window.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Windows.GetObjectBrowserAsync">
            <summary>Implemented by the environment. Used by VsPackages that want to manipulate Object Browser.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Windows.GetOutputWindowAsync">
            <summary>Manages and controls functions specific to the Output tool window that has multiple panes.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Windows.GetTaskListAsync">
            <summary>Manages lists of task items supplied by task providers.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Windows.GetToolboxAsync">
            <summary>Used to manage the Toolbox.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.BaseCommand`1">
            <summary>
            A base class that makes it easier to handle commands.
            </summary>
            <typeparam name="T">The implementation type itself.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseCommand`1.#ctor(System.Guid,System.Int32)">
            <summary>
            Creates a new instance of the implementation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Helpers.BaseCommand`1.Command">
            <summary>The command object associated with the command ID (guid/id).</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Helpers.BaseCommand`1.Package">
            <summary>The package class that initialized this class.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseCommand`1.InitializeAsync(Microsoft.VisualStudio.Shell.AsyncPackage)">
            <summary>Initializes the command.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseCommand`1.InitializeCompletedAsync">
            <summary>Allows the implementor to manipulate the command before its execution.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseCommand`1.ExecuteAsync(Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs)">
            <summary>Executes when the command is invoked.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.BaseCommand`1.BeforeQueryStatus(System.EventArgs)">
            <summary>Override this method to control the commands visibility and other properties.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.Statusbar">
            <summary>
            An API wrapper that makes it easy to work with the status bar.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Statusbar.GetTextAsync">
            <summary>Gets the current text from the status bar.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Statusbar.SetTextAsync(System.String)">
            <summary>Sets the text in the status bar.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Statusbar.ClearAsync">
            <summary>Clears all text from the status bar.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Statusbar.StartAnimationAsync(Microsoft.VisualStudio.Helpers.StatusAnimation)">
            <summary>Starts the animation on the status bar.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Helpers.Statusbar.EndAnimationAsync(Microsoft.VisualStudio.Helpers.StatusAnimation)">
            <summary>Ends the animation on the status bar.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Helpers.StatusAnimation">
            <summary>A list of built-in animation visuals for the status bar.</summary>
        </member>
        <member name="T:EnvDTE.ProjectExtensions">
            <summary>Extension methods for the Project class.</summary>
        </member>
        <member name="M:EnvDTE.ProjectExtensions.AsSolutionFolder(EnvDTE.Project)">
            <summary>Casts the Project to a SolutionFolder.</summary>
        </member>
        <member name="M:EnvDTE.ProjectExtensions.GetDirectory(EnvDTE.Project)">
            <summary>Gets the root folder of any Visual Studio project.</summary>
        </member>
        <member name="M:EnvDTE.ProjectExtensions.AddFilesToProjectAsync(EnvDTE.Project,System.String[])">
            <summary>Adds one or more files to the project.</summary>
        </member>
        <member name="M:EnvDTE.ProjectExtensions.IsKind(EnvDTE.Project,System.String[])">
            <summary>Check what kind the project is. Use the <see cref="T:EnvDTE80.ProjectKinds"/> list of strings.</summary>
        </member>
        <member name="T:EnvDTE.ProjectTypes">
            <summary>A list of known project types.</summary>
        </member>
        <member name="F:EnvDTE.ProjectTypes.ASPNET_Core">
            <summary>The project type of ASP.NET Core projects.</summary>
        </member>
        <member name="F:EnvDTE.ProjectTypes.DOTNET_Core">
            <summary>The project type of .NET Core projects.</summary>
        </member>
        <member name="F:EnvDTE.ProjectTypes.MISC">
            <summary>The project type of Misc projects.</summary>
        </member>
        <member name="F:EnvDTE.ProjectTypes.NODE_JS">
            <summary>The project type of Node.js projects.</summary>
        </member>
        <member name="F:EnvDTE.ProjectTypes.SOLUTION_FOLDER">
            <summary>The project type of a solution folder.</summary>
        </member>
        <member name="F:EnvDTE.ProjectTypes.SSDT">
            <summary>The project type of SQL Server Data projects.</summary>
        </member>
        <member name="F:EnvDTE.ProjectTypes.UNIVERSAL_APP">
            <summary>The project type of UWP app projects.</summary>
        </member>
        <member name="F:EnvDTE.ProjectTypes.WAP">
            <summary>The project type of Web Application projects.</summary>
        </member>
        <member name="F:EnvDTE.ProjectTypes.WEBSITE_PROJECT">
            <summary>The project type of the legacy website projects.</summary>
        </member>
        <member name="T:EnvDTE.ProjectItemExtensions">
            <summary>Extension methods for the ProjectItem class.</summary>
        </member>
        <member name="M:EnvDTE.ProjectItemExtensions.OpenInPreviewTab(EnvDTE.ProjectItem)">
            <summary>
            Opens a file in the Preview Tab (provisional tab) if supported by the editor factory.
            </summary>
        </member>
        <member name="M:EnvDTE.ProjectItemExtensions.PreviewDocument(System.String)">
            <summary>
            Opens a file in the Preview Tab (provisional tab) if supported by the editor factory.
            </summary>
        </member>
        <member name="M:EnvDTE.ProjectItemExtensions.SetItemType(EnvDTE.ProjectItem,System.String)">
            <summary>Sets the item type in the project file for the item.</summary>
        </member>
        <member name="T:VSSDK.Helpers.Shared.Extensions.TextBufferExtensions">
            <summary>Extension methods for the ITextBuffer interface.</summary>
        </member>
        <member name="M:VSSDK.Helpers.Shared.Extensions.TextBufferExtensions.GetFileName(Microsoft.VisualStudio.Text.ITextBuffer)">
            <summary>Gets the file name on disk associated with the buffer.</summary>
        </member>
    </members>
</doc>
